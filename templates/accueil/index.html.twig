{% extends 'base.html.twig' %}

{% block title %}Hello AccueilController!{% endblock %}

{% block body %}

{% if app.user %}
        <h1>Bienvenue, {{ app.user.pseudo }}!</h1>
        {# <p>Contenu pour les utilisateurs connectés.</p> #}
    {% else %}
        <h1>Bienvenue</h1>
        <p>Contenu pour les utilisateurs non connectés.</p>
    {% endif %}

<p>
    En panne d’inspiration pour vos personnages ? Découvrez la magie des cartes de tarot ! En tirant aléatoirement trois cartes, créez des personnages fascinants et uniques. Chaque carte raconte une histoire et révèle des traits de caractère inédits. Laissez les symboles du tarot guider votre imagination pour façonner des héros inattendus.

    Prêt à commencer ? Cliquez sur le bouton ci-dessous pour tirer vos cartes et donner vie à un nouveau personnage !
</p>
<button id="draw-cards-btn">Tirage</button>

<div id="cards-result">
    <!-- Les cartes tirées seront affichées ici -->
</div>

<button  id="save-hero-btn">Sauvegarder le tirage</button>

<script>
    document.getElementById('draw-cards-btn').addEventListener('click', function() {
        fetch('{{ path('app_create_hero_draw') }}')
            .then(response => response.json())
            .then(data => {
                let resultDiv = document.getElementById('cards-result');
                resultDiv.innerHTML = ''; // Vider le résultat précédent
                data.forEach(card => {
                    resultDiv.innerHTML += `<p>${card.number} - ${card.name} - ${card.description}</p>`;
                });
            })
            .catch(error => console.error('Erreur lors du tirage des cartes :', error));
    });

    document.getElementById('save-hero-btn').addEventListener('click', function() {
        const cards = []; // Récupérer les identifiants des cartes que tu as tirées

        // Exemple : suppose que tu as stocké les cartes dans une variable
        const cardsElements = document.querySelectorAll('#cards-result p');
        cardsElements.forEach(cardElement => {
            const cardInfo = cardElement.innerText.split(' - '); // Assurez-vous que cela correspond à votre format
            const cardId = cardInfo[0]; // Remplacez par l'identifiant de carte réel
            cards.push(cardId);
        });

        const heroName = prompt("Entrez le nom de votre héros :"); // Demande un nom pour le héros

        // Envoi des données via Fetch API
        fetch('{{ path('app_save_hero') }}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name: heroName, cards: cards })
        })
        .then(response => response.json())
        .then(data => {
            console.log(data);
            alert(data.status); // Affiche un message de succès
        })
        .catch(error => console.error('Erreur lors de la sauvegarde :', error));
    });
</script>

{% endblock %}